name: Weekly Signal Generation

on:
  schedule:
    - cron: '0 18 * * 5'  # Runs every Friday at 6 PM WAT (UTC+1)
  workflow_dispatch:  # Allows you to manually trigger the workflow if needed

jobs:
  generate-signals:
    runs-on: ubuntu-latest  # Use an Ubuntu runner for GitHub Actions

    steps:
    - name: Checkout code
      uses: actions/checkout@v2  # Checkout the repository

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Cache TA-Lib
      id: cache-talib
      uses: actions/cache@v2
      with:
        path: ta-lib  # Cache the downloaded TA-Lib source files
        key: ${{ runner.os }}-talib  # Key to identify cache (e.g., by operating system)

    - name: Build TA-Lib
      if: steps.cache-talib.outputs.cache-hit != 'true'  # Only build if the cache is not found
      run: |
        curl -L http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz -o ta-lib-0.4.0-src.tar.gz  # Download the TA-Lib source
        tar -xzf ta-lib-0.4.0-src.tar.gz  # Extract the source tarball
        cd ta-lib
        ./configure --prefix=/usr  # Configure installation
        make  # Compile the library

    - name: Install TA-Lib
      run: |
        cd ta-lib
        sudo make install  # Install the compiled TA-Lib

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt  # Install all dependencies from requirements.txt

    - name: Check dependencies for conflicts
      run: |
          pip check  # This will check for dependency conflicts

    - name: Run signal generation script
      run: python database_setup/generate_signals.py  # Run the signal generation script
